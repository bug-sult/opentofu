apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-template-app
  namespace: test-template-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-template-app
  template:
    metadata:
      labels:
        app: test-template-app
    spec:
      containers:
      - name: test-template-app
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html-content
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            memory: "32Mi"
            cpu: "100m"
          limits:
            memory: "64Mi"
            cpu: "200m"
      volumes:
      - name: html-content
        configMap:
          name: test-template-app-content
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-template-app-content
  namespace: test-template-app
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="de">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>test-template-app - Keycloak Auth</title>
        <script src="https://cdn.jsdelivr.net/npm/keycloak-js@21.1.1/dist/keycloak.min.js"></script>
        <style>
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                margin: 0;
                padding: 20px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
            }
            .container {
                background: white;
                padding: 2rem;
                border-radius: 15px;
                box-shadow: 0 10px 30px rgba(0,0,0,0.2);
                text-align: center;
                max-width: 600px;
                width: 100%;
            }
            .loading {
                background: #e3f2fd;
                border: 2px solid #2196f3;
                padding: 1rem;
                border-radius: 10px;
                margin: 1rem 0;
            }
            .authenticated {
                background: #e8f5e8;
                border: 2px solid #4caf50;
                padding: 1rem;
                border-radius: 10px;
                margin: 1rem 0;
            }
            .error {
                background: #ffebee;
                border: 2px solid #f44336;
                padding: 1rem;
                border-radius: 10px;
                margin: 1rem 0;
            }
            button {
                background: #2196f3;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 5px;
                cursor: pointer;
                margin: 5px;
            }
            button:hover {
                background: #1976d2;
            }
            .logout-btn {
                background: #f44336;
            }
            .logout-btn:hover {
                background: #d32f2f;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üîê test-template-app</h1>
            <p>Sichere Anwendung mit Keycloak-Authentifizierung</p>
            <p><strong>üéØ Template-System erfolgreich getestet!</strong></p>
            
            <div id="loading" class="loading">
                <h3>üîÑ Authentifizierung wird initialisiert...</h3>
                <p>Verbindung zu Keycloak wird hergestellt</p>
            </div>

            <div id="error" class="error" style="display: none;">
                <h3>‚ùå Authentifizierung fehlgeschlagen</h3>
                <p id="error-message"></p>
                <button onclick="location.reload()">Erneut versuchen</button>
            </div>

            <div id="authenticated-content" style="display: none;">
                <div class="authenticated">
                    <h3>‚úÖ Erfolgreich authentifiziert!</h3>
                    <p>Willkommen in test-template-app</p>
                    <p><strong>üöÄ Automatische Client-ID: test-template-app</strong></p>
                </div>

                <div id="user-info" style="text-align: left; background: #f5f5f5; padding: 15px; border-radius: 10px; margin: 15px 0;">
                    <h4>üë§ Benutzerinformationen</h4>
                    <div id="user-details">Lade Benutzerinformationen...</div>
                </div>

                <div style="margin-top: 20px;">
                    <button onclick="refreshToken()">üîÑ Token aktualisieren</button>
                    <button class="logout-btn" onclick="logout()">üö™ Abmelden</button>
                </div>
            </div>
        </div>

        <script>
            // Keycloak Konfiguration - Client-ID entspricht automatisch dem App-Namen
            const keycloakConfig = {
                url: window.location.protocol + '//' + window.location.hostname + ':30083',
                realm: 'gitops-realm',
                clientId: 'test-template-app'  // ‚Üê Automatisch gleich dem App-Namen
            };

            let keycloak;

            // Keycloak initialisieren
            function initKeycloak() {
                console.log('Initialisiere Keycloak mit Config:', keycloakConfig);
                keycloak = new Keycloak(keycloakConfig);
                
                return keycloak.init({
                    onLoad: 'login-required',
                    checkLoginIframe: false,
                    pkceMethod: 'S256'
                }).then(function(authenticated) {
                    if (authenticated) {
                        console.log('Benutzer erfolgreich authentifiziert');
                        showAuthenticatedContent();
                        displayUserInfo();
                        return true;
                    } else {
                        console.log('Benutzer nicht authentifiziert');
                        showError('Authentifizierung erforderlich');
                        return false;
                    }
                }).catch(function(error) {
                    console.error('Authentifizierung fehlgeschlagen:', error);
                    showError('Authentifizierung fehlgeschlagen: ' + error.message);
                    return false;
                });
            }

            function showAuthenticatedContent() {
                document.getElementById('loading').style.display = 'none';
                document.getElementById('error').style.display = 'none';
                document.getElementById('authenticated-content').style.display = 'block';
            }

            function showError(message) {
                document.getElementById('loading').style.display = 'none';
                document.getElementById('authenticated-content').style.display = 'none';
                document.getElementById('error').style.display = 'block';
                document.getElementById('error-message').textContent = message;
            }

            function displayUserInfo() {
                if (keycloak.tokenParsed) {
                    const userInfo = {
                        username: keycloak.tokenParsed.preferred_username || 'Unbekannt',
                        email: keycloak.tokenParsed.email || 'Keine E-Mail verf√ºgbar',
                        firstName: keycloak.tokenParsed.given_name || '',
                        lastName: keycloak.tokenParsed.family_name || '',
                        roles: keycloak.tokenParsed.realm_access?.roles || [],
                        groups: keycloak.tokenParsed.groups || []
                    };
                    
                    const fullName = `${userInfo.firstName} ${userInfo.lastName}`.trim() || userInfo.username;
                    
                    document.getElementById('user-details').innerHTML = `
                        <p><strong>üëã Name:</strong> ${fullName}</p>
                        <p><strong>üÜî Benutzername:</strong> ${userInfo.username}</p>
                        <p><strong>üìß E-Mail:</strong> ${userInfo.email}</p>
                        <p><strong>üé≠ Rollen:</strong> ${userInfo.roles.length > 0 ? userInfo.roles.join(', ') : 'Keine Rollen'}</p>
                        <p><strong>üîë Token g√ºltig bis:</strong> ${new Date(keycloak.tokenParsed.exp * 1000).toLocaleString('de-DE')}</p>
                        <p><strong>üè¢ App:</strong> test-template-app</p>
                        <p><strong>üåê Realm:</strong> ${keycloak.realm}</p>
                    `;
                }
            }

            function logout() {
                if (keycloak) {
                    keycloak.logout({
                        redirectUri: window.location.origin + window.location.pathname
                    });
                }
            }

            function refreshToken() {
                if (keycloak) {
                    keycloak.updateToken(30).then(function(refreshed) {
                        if (refreshed) {
                            console.log('Token erfolgreich aktualisiert');
                            displayUserInfo();
                            alert('Token wurde aktualisiert!');
                        } else {
                            console.log('Token ist noch g√ºltig');
                            alert('Token ist noch g√ºltig');
                        }
                    }).catch(function() {
                        console.log('Token-Aktualisierung fehlgeschlagen');
                        alert('Token-Aktualisierung fehlgeschlagen - Abmeldung erforderlich');
                        logout();
                    });
                }
            }

            // Automatische Token-Aktualisierung alle 30 Sekunden
            setInterval(function() {
                if (keycloak) {
                    keycloak.updateToken(30).catch(function() {
                        console.log('Automatische Token-Aktualisierung fehlgeschlagen');
                        logout();
                    });
                }
            }, 30000);

            // Beim Laden der Seite
            document.addEventListener('DOMContentLoaded', function() {
                console.log('Starte test-template-app mit Keycloak-Integration');
                initKeycloak();
            });

            // Globale Funktionen f√ºr Debugging
            window.keycloak = keycloak;
            window.logout = logout;
            window.refreshToken = refreshToken;
        </script>
    </body>
    </html>
