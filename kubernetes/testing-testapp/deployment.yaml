apiVersion: apps/v1
kind: Deployment
metadata:
  name: testing-testapp-frontend
  namespace: testing-testapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testing-testapp-frontend
  template:
    metadata:
      labels:
        app: testing-testapp-frontend
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html-content
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            memory: "32Mi"
            cpu: "100m"
          limits:
            memory: "64Mi"
            cpu: "200m"
      volumes:
      - name: html-content
        configMap:
          name: testing-testapp-content
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: testing-testapp-content
  namespace: testing-testapp
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="de">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Testing-TestApp - GitHub Actions Workflow Test</title>
        <style>
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                margin: 0;
                padding: 20px;
                background: linear-gradient(135deg, #FF6B6B 0%, #4ECDC4 100%);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
            }
            .container {
                background: white;
                padding: 3rem;
                border-radius: 25px;
                box-shadow: 0 20px 40px rgba(0,0,0,0.1);
                text-align: center;
                max-width: 900px;
                width: 100%;
                border: 4px solid #FF6B6B;
                position: relative;
                overflow: hidden;
            }
            .container::before {
                content: '';
                position: absolute;
                top: -50%;
                left: -50%;
                width: 200%;
                height: 200%;
                background: linear-gradient(45deg, transparent, rgba(255,107,107,0.1), transparent);
                animation: rotate 6s linear infinite;
            }
            @keyframes rotate {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
            .content {
                position: relative;
                z-index: 1;
            }
            h1 {
                color: #FF6B6B;
                margin-bottom: 1rem;
                font-size: 3.5rem;
                text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
                animation: bounce 2s infinite;
            }
            @keyframes bounce {
                0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
                40% { transform: translateY(-10px); }
                60% { transform: translateY(-5px); }
            }
            .subtitle {
                color: #666;
                margin-bottom: 2rem;
                font-size: 1.4rem;
                font-weight: 300;
            }
            .status {
                background: linear-gradient(135deg, #FF6B6B, #4ECDC4);
                color: white;
                padding: 2rem;
                border-radius: 15px;
                margin: 2rem 0;
                font-weight: bold;
                font-size: 1.2rem;
                box-shadow: 0 8px 25px rgba(255,107,107,0.3);
                animation: glow 3s ease-in-out infinite alternate;
            }
            @keyframes glow {
                from { box-shadow: 0 8px 25px rgba(255,107,107,0.3); }
                to { box-shadow: 0 8px 35px rgba(78,205,196,0.5); }
            }
            .workflow-section {
                background: linear-gradient(135deg, #FFF5F5, #F0FDFA);
                padding: 2rem;
                border-radius: 15px;
                margin: 2rem 0;
                border: 2px solid #FF6B6B;
            }
            .workflow-step {
                background: white;
                padding: 1.5rem;
                margin: 1rem 0;
                border-left: 5px solid #4ECDC4;
                border-radius: 10px;
                box-shadow: 0 4px 15px rgba(0,0,0,0.1);
                transition: transform 0.3s ease;
            }
            .workflow-step:hover {
                transform: translateX(10px);
            }
            .tech-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 1rem;
                margin: 2rem 0;
            }
            .tech-card {
                background: linear-gradient(135deg, #FF6B6B, #4ECDC4);
                color: white;
                padding: 1.5rem;
                border-radius: 15px;
                text-align: center;
                font-weight: bold;
                transform: perspective(1000px) rotateY(0deg);
                transition: transform 0.6s;
            }
            .tech-card:hover {
                transform: perspective(1000px) rotateY(180deg);
            }
            .info-badge {
                display: inline-block;
                background: #4ECDC4;
                color: white;
                padding: 0.5rem 1rem;
                border-radius: 25px;
                margin: 0.3rem;
                font-size: 0.9rem;
                font-weight: bold;
                animation: pulse 2s infinite;
            }
            @keyframes pulse {
                0% { transform: scale(1); }
                50% { transform: scale(1.05); }
                100% { transform: scale(1); }
            }
            .deployment-info {
                background: linear-gradient(135deg, #E8F5E8, #F0FDFA);
                padding: 2rem;
                border-radius: 20px;
                margin: 2rem 0;
                border: 3px solid #4ECDC4;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="content">
                <h1>üß™ Testing-TestApp</h1>
                <p class="subtitle">GitHub Actions Workflow Validierung & Test</p>
                
                <div class="status">
                    ‚úÖ Testing-TestApp erfolgreich √ºber bestehenden GitHub Actions Workflow deployed!
                </div>

                <div class="deployment-info">
                    <h3>üìã Anwendungs-Details</h3>
                    <div class="tech-grid">
                        <div class="tech-card">
                            <h4>App Name</h4>
                            <p>testing-testapp</p>
                        </div>
                        <div class="tech-card">
                            <h4>Namespace</h4>
                            <p>testing-testapp</p>
                        </div>
                        <div class="tech-card">
                            <h4>Port</h4>
                            <p>30090 (NodePort)</p>
                        </div>
                        <div class="tech-card">
                            <h4>Workflow</h4>
                            <p>deploy.yml</p>
                        </div>
                    </div>
                </div>

                <div class="workflow-section">
                    <h3>üîÑ GitHub Actions Workflow Test</h3>
                    <div class="workflow-step">
                        <strong>1. Automatische Erkennung:</strong> Der bestehende deploy.yml Workflow erkennt √Ñnderungen in kubernetes/testing-testapp/
                    </div>
                    <div class="workflow-step">
                        <strong>2. Matrix Strategy:</strong> Workflow verwendet dynamische Matrix-Strategie f√ºr Multi-App Deployment
                    </div>
                    <div class="workflow-step">
                        <strong>3. Validierung:</strong> Alle Kubernetes Manifeste werden automatisch validiert
                    </div>
                    <div class="workflow-step">
                        <strong>4. Deployment:</strong> Anwendung wird automatisch in Kubernetes deployed
                    </div>
                    <div class="workflow-step">
                        <strong>5. Verifikation:</strong> Rollout-Status und Pod-Health werden √ºberpr√ºft
                    </div>
                    <div class="workflow-step">
                        <strong>6. ArgoCD Integration:</strong> Optional ArgoCD Application wird erstellt
                    </div>
                </div>

                <div class="workflow-section">
                    <h3>üõ†Ô∏è Workflow Features</h3>
                    <div>
                        <span class="info-badge">Auto-Detection</span>
                        <span class="info-badge">Matrix Strategy</span>
                        <span class="info-badge">Dry-Run Validation</span>
                        <span class="info-badge">Rollout Monitoring</span>
                        <span class="info-badge">Health Checks</span>
                        <span class="info-badge">ArgoCD Ready</span>
                    </div>
                </div>

                <div class="deployment-info">
                    <h3>üìä Deployment Status</h3>
                    <p><strong>Build Zeit:</strong> <span id="buildTime"></span></p>
                    <p><strong>Status:</strong> <span style="color: #4ECDC4; font-weight: bold;">üü¢ Running</span></p>
                    <p><strong>Workflow:</strong> Kubernetes App Deployment</p>
                    <p><strong>Strategy:</strong> Matrix-based Multi-App</p>
                    <p><strong>Trigger:</strong> Push zu kubernetes/testing-testapp/</p>
                </div>

                <div class="workflow-section">
                    <h3>üîó Zugriff & Monitoring</h3>
                    <p><strong>Web-URL:</strong> http://[NODE-IP]:30090</p>
                    <p><strong>GitHub Actions:</strong> Repository ‚Üí Actions ‚Üí "Kubernetes App Deployment"</p>
                    <p><strong>ArgoCD:</strong> http://[NODE-IP]:30085</p>
                    <p><strong>Kubectl:</strong> kubectl get pods -n testing-testapp</p>
                </div>
            </div>
        </div>

        <script>
            // Zeige aktuelle Zeit als Build-Zeit
            document.getElementById('buildTime').textContent = new Date().toLocaleString('de-DE');
            
            // Dynamische Hintergrund-Animation
            setInterval(function() {
                const container = document.querySelector('.container');
                const hue = Math.floor(Math.random() * 360);
                container.style.borderColor = `hsl(${hue}, 70%, 60%)`;
            }, 5000);
        </script>
    </body>
    </html>
