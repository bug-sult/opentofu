apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-frontend
  namespace: example-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: example-frontend
  template:
    metadata:
      labels:
        app: example-frontend
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html-content
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            memory: "32Mi"
            cpu: "100m"
          limits:
            memory: "64Mi"
            cpu: "200m"
      volumes:
      - name: html-content
        configMap:
          name: example-frontend-content
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-frontend-content
  namespace: example-app
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Example App - Frontend & Backend</title>
        <style>
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                margin: 0;
                padding: 20px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
            }
            .container {
                background: white;
                padding: 2rem;
                border-radius: 15px;
                box-shadow: 0 10px 30px rgba(0,0,0,0.2);
                text-align: center;
                max-width: 600px;
                width: 100%;
            }
            h1 {
                color: #333;
                margin-bottom: 1rem;
            }
            .subtitle {
                color: #666;
                margin-bottom: 2rem;
            }
            .api-section {
                background: #f8f9fa;
                padding: 1.5rem;
                border-radius: 10px;
                margin: 1rem 0;
            }
            button {
                background: #667eea;
                color: white;
                border: none;
                padding: 12px 24px;
                border-radius: 8px;
                cursor: pointer;
                font-size: 16px;
                margin: 10px;
                transition: background 0.3s;
            }
            button:hover {
                background: #5a6fd8;
            }
            .response {
                background: #e8f5e8;
                border: 1px solid #4caf50;
                padding: 1rem;
                border-radius: 8px;
                margin-top: 1rem;
                text-align: left;
                font-family: monospace;
                white-space: pre-wrap;
            }
            .error {
                background: #ffeaea;
                border: 1px solid #f44336;
                color: #d32f2f;
            }
            .status {
                margin: 1rem 0;
                padding: 0.5rem;
                border-radius: 5px;
            }
            .status.online {
                background: #e8f5e8;
                color: #2e7d32;
            }
            .status.offline {
                background: #ffeaea;
                color: #d32f2f;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üöÄ Example Application</h1>
            <p class="subtitle">Simple Frontend & Backend Demo</p>
            
            <div class="api-section">
                <h3>Backend API Status</h3>
                <div id="status" class="status">Checking...</div>
                <button onclick="checkBackend()">Test Backend Connection</button>
                <button onclick="getHello()">Get Hello Message</button>
                <div id="response"></div>
            </div>

            <div class="api-section">
                <h3>Application Info</h3>
                <p><strong>Frontend:</strong> Nginx serving static HTML</p>
                <p><strong>Backend:</strong> Node.js Express API</p>
                <p><strong>Deployment:</strong> Kubernetes with ArgoCD</p>
                <p><strong>Authentication:</strong> Keycloak (available separately)</p>
            </div>
        </div>

        <script>
            const BACKEND_URL = 'http://example-backend-service.example-app.svc.cluster.local:3001';
            
            async function checkBackend() {
                const statusDiv = document.getElementById('status');
                const responseDiv = document.getElementById('response');
                
                try {
                    statusDiv.textContent = 'Checking backend...';
                    statusDiv.className = 'status';
                    
                    const response = await fetch('/api/hello');
                    
                    if (response.ok) {
                        statusDiv.textContent = '‚úÖ Backend is online';
                        statusDiv.className = 'status online';
                        responseDiv.innerHTML = '<div class="response">Backend connection successful!</div>';
                    } else {
                        throw new Error(`HTTP ${response.status}`);
                    }
                } catch (error) {
                    statusDiv.textContent = '‚ùå Backend is offline';
                    statusDiv.className = 'status offline';
                    responseDiv.innerHTML = `<div class="response error">Error: ${error.message}</div>`;
                }
            }
            
            async function getHello() {
                const responseDiv = document.getElementById('response');
                
                try {
                    responseDiv.innerHTML = '<div class="response">Loading...</div>';
                    
                    const response = await fetch('/api/hello');
                    const data = await response.json();
                    
                    responseDiv.innerHTML = `<div class="response">${JSON.stringify(data, null, 2)}</div>`;
                } catch (error) {
                    responseDiv.innerHTML = `<div class="response error">Error: ${error.message}</div>`;
                }
            }
            
            // Check backend status on page load
            window.onload = function() {
                checkBackend();
            };
        </script>
    </body>
    </html>
  nginx.conf: |
    server {
        listen 80;
        server_name localhost;
        
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        
        # Proxy API calls to backend
        location /api/ {
            proxy_pass http://example-backend-service.example-app.svc.cluster.local:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
