apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-backend
  namespace: example-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: example-backend
  template:
    metadata:
      labels:
        app: example-backend
    spec:
      containers:
      - name: example-backend
        image: node:18-alpine
        workingDir: /app
        command: ["sh", "-c"]
        args: ["ls -la /config && cp /config/package.json /app/ && cp /config/server.js /app/ && ls -la /app && npm install && npm start"]
        ports:
        - containerPort: 3001
        volumeMounts:
        - name: app-files
          mountPath: /config
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 20
          periodSeconds: 5
      volumes:
      - name: app-files
        configMap:
          name: example-backend-app
---
apiVersion: v1
kind: Service
metadata:
  name: example-backend-service
  namespace: example-app
spec:
  selector:
    app: example-backend
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001
  type: ClusterIP
