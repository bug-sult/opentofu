apiVersion: v1
kind: Namespace
metadata:
  name: keycloak
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-admin
  namespace: keycloak
type: Opaque
stringData:
  username: admin
  password: admin123
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:23.0.3
        args:
          - start-dev
          - --import-realm
        env:
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              name: keycloak-admin
              key: username
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-admin
              key: password
        - name: KC_PROXY
          value: edge
        - name: KC_HOSTNAME_STRICT
          value: "false"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "false"
        - name: KC_HTTP_ENABLED
          value: "true"
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /realms/master
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /realms/master
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        volumeMounts:
        - name: realm-config
          mountPath: /opt/keycloak/data/import
          readOnly: true
      volumes:
      - name: realm-config
        configMap:
          name: keycloak-realm-config
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    nodePort: 30083
  selector:
    app: keycloak
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-realm-config
  namespace: keycloak
data:
  gitops-realm.json: |
    {
      "realm": "gitops-realm",
      "enabled": true,
      "displayName": "GitOps Applications Realm",
      "accessTokenLifespan": 300,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "offlineSessionIdleTimeout": 2592000,
      "loginTheme": "keycloak",
      "accountTheme": "keycloak",
      "adminTheme": "keycloak",
      "emailTheme": "keycloak",
      "internationalizationEnabled": true,
      "supportedLocales": ["en", "de"],
      "defaultLocale": "en",
      "clients": [
        {
          "clientId": "example-app",
          "name": "Example Application",
          "enabled": true,
          "protocol": "openid-connect",
          "publicClient": true,
          "standardFlowEnabled": true,
          "directAccessGrantsEnabled": true,
          "implicitFlowEnabled": false,
          "serviceAccountsEnabled": false,
          "redirectUris": [
            "http://*:30080/*",
            "http://localhost:30080/*"
          ],
          "webOrigins": [
            "http://*:30080",
            "http://localhost:30080"
          ],
          "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256",
            "access.token.lifespan": "300"
          }
        },
        {
          "clientId": "gruppe5-gute",
          "name": "Gruppe5 Gute Application",
          "enabled": true,
          "protocol": "openid-connect",
          "publicClient": true,
          "standardFlowEnabled": true,
          "directAccessGrantsEnabled": true,
          "implicitFlowEnabled": false,
          "redirectUris": [
            "http://*:30084/*",
            "http://localhost:30084/*"
          ],
          "webOrigins": [
            "http://*:30084",
            "http://localhost:30084"
          ],
          "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          }
        }
      ],
      "users": [
        {
          "username": "admin",
          "enabled": true,
          "firstName": "Admin",
          "lastName": "User",
          "email": "admin@gitops.local",
          "emailVerified": true,
          "credentials": [
            {
              "type": "password",
              "value": "admin123",
              "temporary": false
            }
          ],
          "realmRoles": ["admin", "user"],
          "groups": ["/admins"]
        },
        {
          "username": "developer",
          "enabled": true,
          "firstName": "Developer",
          "lastName": "User",
          "email": "developer@gitops.local",
          "emailVerified": true,
          "credentials": [
            {
              "type": "password",
              "value": "dev123",
              "temporary": false
            }
          ],
          "realmRoles": ["developer", "user"],
          "groups": ["/developers"]
        },
        {
          "username": "testuser",
          "enabled": true,
          "firstName": "Test",
          "lastName": "User",
          "email": "test@gitops.local",
          "emailVerified": true,
          "credentials": [
            {
              "type": "password",
              "value": "test123",
              "temporary": false
            }
          ],
          "realmRoles": ["user"],
          "groups": ["/users"]
        }
      ],
      "roles": {
        "realm": [
          {
            "name": "admin",
            "description": "Administrator role with full access",
            "composite": false,
            "clientRole": false
          },
          {
            "name": "developer",
            "description": "Developer role with development access",
            "composite": false,
            "clientRole": false
          },
          {
            "name": "user",
            "description": "Regular user role",
            "composite": false,
            "clientRole": false
          }
        ]
      },
      "groups": [
        {
          "name": "admins",
          "path": "/admins",
          "attributes": {
            "description": ["System administrators"]
          },
          "realmRoles": ["admin", "user"]
        },
        {
          "name": "developers",
          "path": "/developers",
          "attributes": {
            "description": ["Application developers"]
          },
          "realmRoles": ["developer", "user"]
        },
        {
          "name": "users",
          "path": "/users",
          "attributes": {
            "description": ["Regular users"]
          },
          "realmRoles": ["user"]
        }
      ]
    }
