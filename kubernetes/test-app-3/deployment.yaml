apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app-3-frontend
  namespace: test-app-3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app-3-frontend
  template:
    metadata:
      labels:
        app: test-app-3-frontend
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html-content
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            memory: "32Mi"
            cpu: "100m"
          limits:
            memory: "64Mi"
            cpu: "200m"
      volumes:
      - name: html-content
        configMap:
          name: test-app-3-content
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-app-3-content
  namespace: test-app-3
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="de">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>test-app-3 - GitOps Demo</title>
        <style>
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                margin: 0;
                padding: 20px;
                background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
                min-height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
            }
            .container {
                background: white;
                padding: 3rem;
                border-radius: 20px;
                box-shadow: 0 15px 35px rgba(0,0,0,0.1);
                text-align: center;
                max-width: 900px;
                width: 100%;
                border: 3px solid #4CAF50;
            }
            h1 {
                color: #2E7D32;
                margin-bottom: 1rem;
                font-size: 3rem;
                text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
            }
            .subtitle {
                color: #666;
                margin-bottom: 2rem;
                font-size: 1.3rem;
                font-weight: 300;
            }
            .status {
                background: linear-gradient(135deg, #4CAF50, #45a049);
                color: white;
                padding: 1.5rem;
                border-radius: 12px;
                margin: 1.5rem 0;
                font-weight: bold;
                font-size: 1.1rem;
                box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);
            }
            .info-section {
                background: #f8f9fa;
                padding: 2rem;
                border-radius: 15px;
                margin: 1.5rem 0;
                text-align: left;
                border-left: 5px solid #4CAF50;
            }
            .deployment-info {
                background: linear-gradient(135deg, #E8F5E8, #F1F8E9);
                padding: 2rem;
                border-radius: 15px;
                margin: 1.5rem 0;
                border: 2px solid #4CAF50;
            }
            .feature-list {
                list-style: none;
                padding: 0;
            }
            .feature-list li {
                padding: 0.8rem 0;
                border-bottom: 1px solid #eee;
                font-size: 1.1rem;
            }
            .feature-list li:before {
                content: "üöÄ ";
                margin-right: 0.8rem;
                font-size: 1.2rem;
            }
            .workflow-step {
                background: linear-gradient(135deg, #E3F2FD, #BBDEFB);
                padding: 1.2rem;
                margin: 0.8rem 0;
                border-left: 5px solid #2196F3;
                border-radius: 8px;
                font-weight: 500;
            }
            .tech-badge {
                display: inline-block;
                background: #4CAF50;
                color: white;
                padding: 0.5rem 1rem;
                border-radius: 20px;
                margin: 0.3rem;
                font-size: 0.9rem;
                font-weight: bold;
            }
            .pulse {
                animation: pulse 2s infinite;
            }
            @keyframes pulse {
                0% { transform: scale(1); }
                50% { transform: scale(1.05); }
                100% { transform: scale(1); }
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1 class="pulse">üéØ test-app-3</h1>
            <p class="subtitle">Automatisierte GitOps Demo-Anwendung mit GitHub Actions</p>
            
            <div class="status">
                ‚úÖ test-app-3 erfolgreich √ºber GitOps deployed!
            </div>

            <div class="deployment-info">
                <h3>üìã Anwendungs-Informationen</h3>
                <ul class="feature-list">
                    <li><strong>Anwendungsname:</strong> test-app-3</li>
                    <li><strong>Namespace:</strong> test-app-3</li>
                    <li><strong>Deployment-Typ:</strong> Kubernetes mit ArgoCD</li>
                    <li><strong>CI/CD Pipeline:</strong> GitHub Actions</li>
                    <li><strong>GitOps Engine:</strong> ArgoCD mit Auto-Sync</li>
                    <li><strong>Service Type:</strong> NodePort (Port 30089)</li>
                    <li><strong>Container:</strong> nginx:alpine</li>
                </ul>
            </div>

            <div class="info-section">
                <h3>üîÑ Automatisierter GitOps Workflow</h3>
                <div class="workflow-step">
                    <strong>1. Code Push:</strong> Entwickler pusht √Ñnderungen zum GitHub Repository
                </div>
                <div class="workflow-step">
                    <strong>2. GitHub Actions Trigger:</strong> Workflow wird automatisch bei √Ñnderungen in kubernetes/test-app-3/ ausgel√∂st
                </div>
                <div class="workflow-step">
                    <strong>3. Validierung:</strong> Kubernetes Manifeste werden validiert und getestet
                </div>
                <div class="workflow-step">
                    <strong>4. Deployment:</strong> Anwendung wird automatisch in Kubernetes deployed
                </div>
                <div class="workflow-step">
                    <strong>5. ArgoCD Sync:</strong> ArgoCD √ºbernimmt und synchronisiert kontinuierlich
                </div>
                <div class="workflow-step">
                    <strong>6. Live Update:</strong> Anwendung ist sofort verf√ºgbar und aktualisiert
                </div>
            </div>

            <div class="info-section">
                <h3>üõ†Ô∏è Technologie Stack</h3>
                <div>
                    <span class="tech-badge">Kubernetes</span>
                    <span class="tech-badge">ArgoCD</span>
                    <span class="tech-badge">GitHub Actions</span>
                    <span class="tech-badge">Docker</span>
                    <span class="tech-badge">Nginx</span>
                    <span class="tech-badge">GitOps</span>
                </div>
            </div>

            <div class="info-section">
                <h3>üìä Deployment Details</h3>
                <p><strong>Version:</strong> 1.0.0</p>
                <p><strong>Build Zeit:</strong> <span id="buildTime"></span></p>
                <p><strong>Status:</strong> <span style="color: #4CAF50; font-weight: bold;">üü¢ Running</span></p>
                <p><strong>Replicas:</strong> 1</p>
                <p><strong>Resource Limits:</strong> 64Mi RAM, 200m CPU</p>
                <p><strong>Health Check:</strong> ‚úÖ Aktiv</p>
            </div>

            <div class="info-section">
                <h3>üîó Zugriffsinformationen</h3>
                <p><strong>Externe URL:</strong> http://[NODE-IP]:30089</p>
                <p><strong>Kubernetes Service:</strong> test-app-3-service</p>
                <p><strong>ArgoCD Application:</strong> test-app-3</p>
                <p><strong>GitHub Workflow:</strong> test-app-3-deploy.yml</p>
            </div>
        </div>

        <script>
            // Zeige aktuelle Zeit als Build-Zeit
            document.getElementById('buildTime').textContent = new Date().toLocaleString('de-DE');
            
            // Einfache Animation f√ºr bessere UX
            setInterval(function() {
                const status = document.querySelector('.status');
                status.style.boxShadow = status.style.boxShadow === 'none' ? '0 4px 15px rgba(76, 175, 80, 0.3)' : 'none';
            }, 3000);
        </script>
    </body>
    </html>
