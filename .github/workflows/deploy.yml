name: Deploy App

on:
  push:
    branches: [ main, master ]
    paths:
      - 'kubernetes/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'kubernetes/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Detect app folder (auto)
      id: detect
      run: |
        APP_FOLDER=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^kubernetes/' | cut -d/ -f2 | sort -u | head -n1)
        echo "Detected folder: $APP_FOLDER"
        echo "app_name=$APP_FOLDER" >> "$GITHUB_OUTPUT"

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config

    - name: Deploy Kubernetes manifests
      run: |
        echo "üöÄ Deploying ${{ steps.detect.outputs.app_name }}..."
        APP="kubernetes/${{ steps.detect.outputs.app_name }}"
        kubectl apply -f $APP/namespace.yaml
        kubectl apply -f $APP/deployment.yaml
        kubectl apply -f $APP/service.yaml

    - name: Wait for Deployment to be ready
      run: |
        NS="${{ steps.detect.outputs.app_name }}"
        DEPLOY_NAME="${NS}-frontend"
        echo "‚è≥ Waiting for deployment $DEPLOY_NAME to be ready in namespace $NS..."
        kubectl rollout status deployment/$DEPLOY_NAME -n $NS --timeout=300s || true

    - name: Health Check
      run: |
        NS="${{ steps.detect.outputs.app_name }}"
        SVC="${NS}-service"
        echo "üè• Checking service endpoints for $SVC in $NS"
        ENDPOINTS=$(kubectl get endpoints $SVC -n $NS -o jsonpath='{.subsets}' 2>/dev/null)
        if [ -n "$ENDPOINTS" ] && [ "$ENDPOINTS" != "null" ]; then
          echo "‚úÖ Service is reachable"
        else
          echo "‚ùå Service has no endpoints!"
          exit 1
        fi
